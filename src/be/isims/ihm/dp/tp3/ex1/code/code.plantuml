@startuml

title __CODE's Class Diagram__\n

  namespace be.isims.ihm.dp.tp3.ex1.code {
    class be.isims.ihm.dp.tp3.ex1.code.ConvBin {
        + ConvBin()
        + actualise()
    }
  }
  

  namespace be.isims.ihm.dp.tp3.ex1.code {
    class be.isims.ihm.dp.tp3.ex1.code.ConvHex {
        + ConvHex()
        + actualise()
    }
  }
  

  namespace be.isims.ihm.dp.tp3.ex1.code {
    class be.isims.ihm.dp.tp3.ex1.code.ConvOct {
        + ConvOct()
        + actualise()
    }
  }
  

  namespace be.isims.ihm.dp.tp3.ex1.code {
    interface be.isims.ihm.dp.tp3.ex1.code.Conversion {
        {abstract} + actualise()
    }
  }
  

  namespace be.isims.ihm.dp.tp3.ex1.code {
    class be.isims.ihm.dp.tp3.ex1.code.Main {
        {static} + main()
    }
  }
  

  namespace be.isims.ihm.dp.tp3.ex1.code {
    abstract class be.isims.ihm.dp.tp3.ex1.code.Nombre {
        # conversions : ArrayList<Conversion>
        + ajouter()
        {abstract} + getNombre()
        + notifie()
        {abstract} + setNombre()
        + supprimer()
    }
  }
  

  namespace be.isims.ihm.dp.tp3.ex1.code {
    class be.isims.ihm.dp.tp3.ex1.code.Saisi {
        - nombre : int
        + getNombre()
        + setNombre()
    }
  }
  

  be.isims.ihm.dp.tp3.ex1.code.ConvBin .up.|> be.isims.ihm.dp.tp3.ex1.code.Conversion
  be.isims.ihm.dp.tp3.ex1.code.ConvBin o-- be.isims.ihm.dp.tp3.ex1.code.Nombre : n
  be.isims.ihm.dp.tp3.ex1.code.ConvHex .up.|> be.isims.ihm.dp.tp3.ex1.code.Conversion
  be.isims.ihm.dp.tp3.ex1.code.ConvHex o-- be.isims.ihm.dp.tp3.ex1.code.Nombre : n
  be.isims.ihm.dp.tp3.ex1.code.ConvOct .up.|> be.isims.ihm.dp.tp3.ex1.code.Conversion
  be.isims.ihm.dp.tp3.ex1.code.ConvOct o-- be.isims.ihm.dp.tp3.ex1.code.Nombre : n
  be.isims.ihm.dp.tp3.ex1.code.Saisi -up-|> be.isims.ihm.dp.tp3.ex1.code.Nombre


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
